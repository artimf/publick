import json
import pandas as pd
import plotly.express as px
import streamlit as st

st.set_page_config(layout='wide')

hide_menu_style = """
    <style>
        #MainMenu {visibility: hidden;}
        .stAppDeployButton {visibility: hidden;}
        .stAppToolbar {visibility: hidden;}
    </style>
"""
st.markdown(hide_menu_style, unsafe_allow_html=True)

# Загрузка JSON
with open('combined_logs.json') as f:
    data = json.load(f)

df = pd.DataFrame(data).T
new_order = ['hostname', 'ip_address', 'stend', 'po', 'role',
             'sm_hdd', 'sm_vers', 'sm_net', 'sm_dcentr', 'sm_vmware',
             'status', 'time', 'info', 'date_create']
df = df[[col for col in new_order if col in df.columns]]

for col in ['info']:
    df[col] = df[col].astype(str).apply(lambda x: x.replace('\n', ' ').strip())

st.title("АС")
st.sidebar.header("Фильтры")

stend_options = sorted(df['stend'].dropna().unique())
selected_stends = set()

cols = st.sidebar.columns(len(stend_options))
for col, option in zip(cols, stend_options):
    if col.toggle(option):
        selected_stends.add(option)
    else:
        selected_stends.discard(option)

po_options = sorted(df['po'].dropna().unique())
selected_pos = set()

st.sidebar.subheader("ПО")
po_cols = st.sidebar.columns(4)  # Разбиваем кнопки на 4 колонки
for i, po in enumerate(po_options):
    if po_cols[i % 4].button(po):
        if po in selected_pos:
            selected_pos.remove(po)
        else:
            selected_pos.add(po)

role_options = sorted(df['role'].dropna().unique())
selected_roles = set()

st.sidebar.subheader("Роли")
role_cols = st.sidebar.columns(4)  # Разбиваем кнопки на 4 колонки
for i, role in enumerate(role_options):
    if role_cols[i % 4].button(role):
        if role in selected_roles:
            selected_roles.remove(role)
        else:
            selected_roles.add(role)

filtered_df = df.copy()
if selected_stends:
    filtered_df = filtered_df[filtered_df['stend'].isin(selected_stends)]
if selected_pos:
    filtered_df = filtered_df[filtered_df['po'].isin(selected_pos)]
if selected_roles:
    filtered_df = filtered_df[filtered_df['role'].isin(selected_roles)]

st.dataframe(filtered_df)
st.info(f"Количество записей: {len(filtered_df)}")

if not filtered_df.empty and st.checkbox("Показать подробности"):
    selected_host = st.selectbox("Выберите хост", filtered_df['hostname'])
    st.json(data[next(key for key, val in data.items() if val['hostname'] == selected_host)])

if not filtered_df.empty:
    st.subheader("Распределение ролей")
    role_counts = filtered_df['po'].value_counts().reset_index()
    role_counts.columns = ['ПО', 'Количество']

    fig = px.bar(role_counts, 
                 x='Количество', 
                 y='ПО', 
                 orientation='h', 
                 text='Количество',
                 color='ПО',
                 color_discrete_sequence=px.colors.qualitative.Vivid)

    fig.update_traces(textposition='outside')
    fig.update_layout(title_text="Распределение ПО", 
                      xaxis_title="Количество серверов", 
                      yaxis_title="Роль", 
                      template="plotly_white")

    st.plotly_chart(fig)
