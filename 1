import streamlit as st
import json
import pandas as pd

# Загрузка JSON
with open('combined_logs.json') as f:
    data = json.load(f)

# Преобразование в DataFrame
df = pd.DataFrame(data).T

# Настройка ширины страницы
st.set_page_config(layout="wide")

# Порядок колонок
new_order = ['hostname', 'ip_address', 'stend', 'po', 'status', 'time', 'info',
             'sm_hdd', 'sm_net', 'sm_vers', 'sm_dcentr', 'sm_vmware', 'date_create', 'role', 'key']
existing_columns = [col for col in new_order if col in df.columns]
df = df[existing_columns]

# Инициализация состояния
if 'selected_stend' not in st.session_state:
    st.session_state.selected_stend = set()
if 'selected_po' not in st.session_state:
    st.session_state.selected_po = set()

# Интерфейс
st.title("Панель управления серверами")

# --- ФИЛЬТР ПО СТЕНДАМ ---
st.sidebar.header("Фильтр по стендам")
for stend in df['stend'].unique():
    if st.sidebar.button(stend, key=f"btn_stend_{stend}"):
        if stend in st.session_state.selected_stend:
            st.session_state.selected_stend.remove(stend)
        else:
            st.session_state.selected_stend.add(stend)

# --- ФИЛЬТР ПО ПО ---
st.sidebar.header("Фильтр по ПО")
for po in df['po'].unique():
    if st.sidebar.button(po, key=f"btn_po_{po}"):
        if po in st.session_state.selected_po:
            st.session_state.selected_po.remove(po)
        else:
            st.session_state.selected_po.add(po)

# Применение фильтров
filtered_df = df
if st.session_state.selected_stend:
    filtered_df = filtered_df[filtered_df['stend'].isin(st.session_state.selected_stend)]
if st.session_state.selected_po:
    filtered_df = filtered_df[filtered_df['po'].isin(st.session_state.selected_po)]

# Отображение таблицы
st.dataframe(filtered_df, use_container_width=True)

# Детальная информация
if st.checkbox("Показать подробности"):
    selected_host = st.selectbox("Выберите хост", filtered_df['hostname'])
    st.json(data[next(key for key, val in data.items() if val['hostname'] == selected_host)])
